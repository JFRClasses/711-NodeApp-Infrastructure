services:

  reverse-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: Reverse-proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    environment:
      - VIRTUAL_HOST=${MAIN_DOMAIN}
      - VIRTUAL_PATH=/.well-known
    volumes:
      - /volumes/nginx/certs:/etc/nginx/certs:ro
      - /volumes/nginx/vhostd:/etc/nginx/vhost.d
      - /volumes/nginx/html:/usr/share/nginx/html:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
# Bind Volumes
  lets-encrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: 'LetsEncrypt'
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=Reverse-proxy
    volumes:
      - /volumes/nginx/certs:/etc/nginx/certs
      - /volumes/nginx/vhostd:/etc/nginx/vhost.d
      - /volumes/nginx/html:/usr/share/nginx/html:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

  node-app:
    image: ${NODE_APP_IMAGE}
    container_name: "node-app"
    expose:
      - 3000
    environment:
      - SERVICE=${SERVICE}
      - USER_EMAIL=${USER_EMAIL}
      - PASSWORD=${PASSWORD}
      - VIRTUAL_HOST=${MAIN_DOMAIN}
      - VIRTUAL_PATH=/
      - LETSENCRYPT_HOST=${MAIN_DOMAIN}
      - LETSENCRYPT_EMAIL=devjdfr@gmail.com

  postgres:
    image: postgres
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=Juande..10
    volumes:
      - postgres:/var/lib/postgresql 

volumes:
  postgres: